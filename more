source-->

cppreference.com
cpplusplus.com
youtube series  ->https://www.youtube.com/watch?v=18c3MTX0PK0&list=PLlrATfBNZ98dudnM48yfGUldqGD0S4FFb


content
-->comment
-->ASCII
--> translation phases (+) http://en.cppreference.com/w/cpp/language/translation_phases
->Identifiers


Permutation and Combination 

1. Q--> B. Tavas and SaDDas(lucky number problem) codeforces problem--> http://codeforces.com/problemset/problem/535/B


BITMASKING

1). All operators(& ,| ,^ ,>> ,<< ,~)
2). Problem--> UNIQUE NUMBER - I (i.e.  find a unique number from an array 		having all digit apearing twice except the single value, 			which is required to be the output).
3). 2's Complement
4). Bitwise checking of ODD and EVEN
5). Calculate the number of set bits in a number --> O(logn) method + 	O(#setBits)( i.e n = n&(n-1) hack ) + Incredible HULK PROBLEM (The 	Planet	 Earth is under a threat from the 	aliens of the outer space and 	the 	Marvel Avengers team is busy fighting against them. 	Meanwhile, The 	Incredible Hulk has to defeat an enemy who is N 	steps above the 	level 	where he is standing (assume it as the 0th 	level). Hulk, because of 	his 	incredible jumping ability can take 	jumps in power of 2. In order to defeat 	the enemy as quickly as 	possible he has to reach the Nth step in	 	minimum moves 	possible. Help Hulk to find the same and contribute in 	saving the	 	Mother Earth.)
6). Bitwise Swapping Function
7). Some fun(use of mask):  - a)get ith bit of a number. B)set ith bit. C) clear 	the ith bit.
8). find subsequences/subsets of a string using bitmasking - O((2^n)).
9). Problem-->codechef question MARCHA1  https://www.codechef.com/problems/MARCHA1
10). Problem-->	UNIQUE NUMBERS - II
	We are given an array containg n numbers. All the numbers are 	present 	twice except for two numbers which are present only 	once. Find the 	unique numbers in linear time without using any 	extra space.

11). Problem-->	UNIQUE NUMBER - III
	We are given an array containg n numbers. All the numbers are 	present 	thrice except for one number which is only present once. 	Find the 	unique number. 
12). Problem -->	XOR PROFIT PROBLEM
	We are given two coins of value x and y. We have to find the 	maximum of 	value of a XOR b where x <= a <= b <= y.(easy peasy)


Array's ->1D and 2D

1). Introduction--> create, initialize, input,output
2). Problem ->(CHEWBACCA AND NUMBER) Help Chewbacca to transform the 	initial number x to the minimum possible positive number(using 9-digit) 	by 	inverting some (possibly, zero) digits. The decimal representation 	of the 	final number shouldn't start with a zero. 
	Sample Input
		 4545
	 Sample Output 
		4444
3). HELP RAMU 
Ramu often uses public transport. The transport in the city is of two types: cabs and rickshaws. The city has n rickshaws and m cabs, the rickshaws are numbered by integers from 1 to n, the cabs are numbered by integers from 1 to m. Public transport is not free.

 There are 4 types of tickets:
 A ticket for one ride on some rickshaw or cab. It costs c1 ruppees;
 A ticket for an unlimited number of rides on some rickshaw or on some cab. It costs c2 ruppees;
 A ticket for an unlimited number of rides on all rickshaws or all cabs. It costs c3 ruppees; 
A ticket for an unlimited number of rides on all rickshaws and cabs. It costs c4 ruppees. 

Ramu knows for sure the number of rides he is going to make and the transport he is going to use. He asked you for help to find the minimum sum of ruppees he will have to spend on the tickets.
Input Format:
Each Test case has 4 lines which are as follows: The first line contains four integers c1,c2,c3,c4 (1≤ c1,c2,c3,c4≤ 1000) — the costs of the tickets. The second line contains two integers n and m (1≤ n,m≤ 1000) — the number of rickshaws and cabs Ramu is going to use. The third line contains n integers ai (0≤ ai≤ 1000) — the number of times Ramu is going to use the rickshaw number i. The fourth line contains m integers bi (0≤ bi≤ 1000) — the number of times Ramu is going to use the cab number i.
Constraints:
Output Format
Print a single number — the minimum sum of ruppes Ramu will have to spend on the tickets.
Sample Input
2 1 3 7 19 2 3 2 5 4 4 4 4 3 2 1 1 3 798 1 2 3
Sample Output
12 1
4.) Generate Subarray(continuous part) of an array/string-->used three 	loops-->O(n^3)
5.) Maximum Subarray Sum-->      
	   a.) in O(n^3).
	b.) in O(n^2). using sum-precomputation hence reducing work of 3rd 			nexted loop as in method (a).
	c.) using Kadane's Algorithm--> O(n). 

6).  TODO  MAXIMUM LENGTH BIOTONIC SUBARRAY
	You are provided n numbers of array. You need to find the 		maximum length of bitonic subarray. A subarray A[i … j] is biotonic if 	there 	is a k with i <= k <= j such 	that A[i] <= A[i + 1] ... <=	A[k] >= 	A[k + 	1] >= .. 	A[j – 1] > = A[j] i.e subarray is first increasing and 	then 	decreasing or 	entirely increasing or decreasing.	1<=n<=	1000000
7.)  ROTATE IMAGE (N X N ARRAY)	Given a 2D array of size N x N. Rotate the 	array 90 degrees. without using extra space .->take transpose and 	then mirrror image.
8.)	Problem - > RainWater Trapping Problem(Google interview).
9). 	Problem -> Facto Sum  Given N numbers compute the sum of their 	factorial modulo 107(not 10^7), thatis for 3 numbers 3 4 5 output is 43 	(150 % 107).
10).	TODO   problem ->Maximum Circular Subarray Sum  

NUMBER THEORY(CN +CB)
1). PigenHole Principle
2). Problem -> Divisible Subarrays(compute the number of subarray whose  sum is divisible by N).
